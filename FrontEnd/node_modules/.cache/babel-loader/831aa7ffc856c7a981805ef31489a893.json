{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/development/React/extreme-joy/FrontEnd/src/Screens/CartScreen.js\";\nimport React, { useContext } from \"react\";\nimport { ProductContext } from \"../context/context\";\nimport CartItem from \"../utils/CartItem\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\n\nconst handleToken = async (token, addresses) => {\n  const response = await axios.post(\"/checkout\", {\n    token\n  });\n  const {\n    status\n  } = response.data;\n  console.log(\"Response:\", response.data);\n\n  if (status === \"success\") {\n    toast(\"Success! Check email for details\", {\n      type: \"success\"\n    });\n  } else {\n    toast(\"Something went wrong\", {\n      type: \"error\"\n    });\n  }\n};\n\nexport default function CartScreen() {\n  const context = useContext(ProductContext);\n  const {\n    cart\n  } = context;\n  let CartTotal = 0;\n\n  for (let i = 0; i < cart.length; i++) {\n    CartTotal += cart[i].price;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Your Cart\"), cart.length == 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"EmptyCart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Cart Is Empty, Start adding\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"shopping-bag.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })) : cart.map(el => {\n    return /*#__PURE__*/React.createElement(CartItem, {\n      product: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Cart__checkout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"MRP: Rs.\", CartTotal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Discount: Rs. -1,000 \"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Total: Rs.\", (CartTotal - 1000).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")), /*#__PURE__*/React.createElement(StripeCheckout, {\n    stripeKey: \"pk_test_4TbuO6qAW2XPuce1Q6ywrGP200NrDZ2233\",\n    token: handleToken,\n    amount: CartTotal,\n    name: \"items\",\n    billingAddress: true,\n    shippingAddress: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/dev/Desktop/development/React/extreme-joy/FrontEnd/src/Screens/CartScreen.js"],"names":["React","useContext","ProductContext","CartItem","StripeCheckout","toast","axios","handleToken","token","addresses","response","post","status","data","console","log","type","CartScreen","context","cart","CartTotal","i","length","price","map","el","toString","replace"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAC,OAAOC,KAAP,EAAcC,SAAd,KAA0B;AAC1C,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CACrB,WADqB,EAErB;AAAEH,IAAAA;AAAF,GAFqB,CAAvB;AAIA,QAAM;AAAEI,IAAAA;AAAF,MAAaF,QAAQ,CAACG,IAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,QAAQ,CAACG,IAAlC;;AACA,MAAID,MAAM,KAAK,SAAf,EAA0B;AACxBP,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AAAEW,MAAAA,IAAI,EAAE;AAAR,KAArC,CAAL;AACD,GAFD,MAEO;AACLX,IAAAA,KAAK,CAAC,sBAAD,EAAyB;AAAEW,MAAAA,IAAI,EAAE;AAAR,KAAzB,CAAL;AACD;AACF,CAZD;;AAcA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAMC,OAAO,GAAGjB,UAAU,CAACC,cAAD,CAA1B;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAWD,OAAjB;AAEA,MAAIE,SAAS,GAAC,CAAd;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,IAAI,CAACG,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC1BD,IAAAA,SAAS,IAAED,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAnB;AACH;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGJ,IAAI,CAACG,MAAL,IAAa,CAAb,gBAAe;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADY,eAEZ;AAAK,IAAA,GAAG,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFY,CAAf,GAIDH,IAAI,CAACK,GAAL,CAAUC,EAAD,IAAQ;AACf,wBAAO,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEA,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CANF,eASE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaL,SAAS,CAACM,QAAV,GAAqBC,OAArB,CAA6B,uBAA7B,EAAsD,GAAtD,CAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAe,CAACP,SAAS,GAAC,IAAX,EAAiBM,QAAjB,GAA4BC,OAA5B,CAAoC,uBAApC,EAA6D,GAA7D,CAAf,CAHF,eAME,oBAAC,cAAD;AACA,IAAA,SAAS,EAAC,4CADV;AAEA,IAAA,KAAK,EAAEpB,WAFP;AAGA,IAAA,MAAM,EAAGa,SAHT;AAIA,IAAA,IAAI,EAAC,OAJL;AAKA,IAAA,cAAc,MALd;AAMA,IAAA,eAAe,MANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CATF,CADF;AA2BD","sourcesContent":["import React, { useContext } from \"react\";\nimport { ProductContext } from \"../context/context\";\nimport CartItem from \"../utils/CartItem\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\n\nconst handleToken=async (token, addresses)=>{\n  const response = await axios.post(\n    \"/checkout\",\n    { token  }\n  );\n  const { status } = response.data;\n  console.log(\"Response:\", response.data);\n  if (status === \"success\") {\n    toast(\"Success! Check email for details\", { type: \"success\" });\n  } else {\n    toast(\"Something went wrong\", { type: \"error\" });\n  }\n}\n\nexport default function CartScreen() {\n  const context = useContext(ProductContext);\n  const { cart } = context;\n\n  let CartTotal=0;\n  for(let i=0;i<cart.length;i++){\n      CartTotal+=cart[i].price;\n  }\n  return (\n    <div className=\"Cart\">\n      <h1>Your Cart</h1>\n      {cart.length==0?<div className=\"EmptyCart\">\n          <h1>Cart Is Empty, Start adding</h1>\n          <img src=\"shopping-bag.svg\" />\n      </div>:\n      cart.map((el) => {\n        return <CartItem product={el} />;\n      })}\n      <div className=\"Cart__checkout\">\n        <h4>MRP: Rs.{CartTotal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h4>\n        <h4>Discount: Rs. -1,000 </h4>\n        <h4>Total: Rs.{(CartTotal-1000).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h4>\n\n        {/* <button className=\"Order-btn\">Order Now</button> */}\n        <StripeCheckout\n        stripeKey=\"pk_test_4TbuO6qAW2XPuce1Q6ywrGP200NrDZ2233\"\n        token={handleToken}\n        amount={ CartTotal}\n        name=\"items\"\n        billingAddress\n        shippingAddress\n      />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}